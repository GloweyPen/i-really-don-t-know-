name: Discord Command Registration

on:
  schedule:
    - cron: '0 */6 * * *'  # every 6 hours instead of 5 minutes (more reasonable)
  workflow_dispatch:       # manual trigger
  push:
    paths:
      - 'register-commands.js'  # trigger on script changes
      - '.github/workflows/register-commands.yml'

jobs:
  register-commands:
    runs-on: ubuntu-latest
    timeout-minutes: 10  # prevent hanging workflows
    
    concurrency:
      group: command-registration
      cancel-in-progress: true
    
    env:
      DISCORD_CLIENT_ID: ${{ secrets.DISCORD_CLIENT_ID }}
      BOT_TOKEN: ${{ secrets.BOT_TOKEN }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4  # updated to v4
        
      - name: Set up Node.js
        uses: actions/setup-node@v4  # updated to v4
        with:
          node-version: '18'  # updated to Node 18 (LTS)
          
      - name: Validate environment variables
        run: |
          if [ -z "$DISCORD_CLIENT_ID" ]; then
            echo "‚ùå Error: DISCORD_CLIENT_ID is not set"
            exit 1
          fi
          if [ -z "$BOT_TOKEN" ]; then
            echo "‚ùå Error: BOT_TOKEN is not set"
            exit 1
          fi
          echo "‚úÖ Environment variables validated"
          
      - name: Install dependencies
        run: |
          echo "üì¶ Installing dependencies..."
          npm install  # use npm install for flexible dependency resolution
          
      - name: Pre-flight check
        run: |
          echo "üîç Running pre-flight checks..."
          if [ ! -f "register-commands.js" ]; then
            echo "‚ùå Error: register-commands.js not found"
            exit 1
          fi
          echo "‚úÖ Pre-flight checks passed"
          
      - name: Register Discord slash commands
        id: register
        run: |
          echo "üöÄ Starting Discord command registration..."
          node register-commands.js
        env:
          DISCORD_CLIENT_ID: ${{ secrets.DISCORD_CLIENT_ID }}
          BOT_TOKEN: ${{ secrets.BOT_TOKEN }}
          
      - name: Upload logs on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: registration-logs-${{ github.run_number }}
          path: |
            *.log
            /home/runner/.npm/_logs/*.log
          retention-days: 7
          
      - name: Notify on success
        if: success()
        run: |
          echo "üéâ Command registration completed successfully!"
          echo "‚úÖ All Discord slash commands have been registered"
          
      - name: Notify on failure  
        if: failure()
        run: |
          echo "‚ùå Command registration failed!"
          echo "Check the logs above for detailed error information"
          echo "üí° Tip: You can manually trigger this workflow from the Actions tab"
